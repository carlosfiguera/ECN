{\rtf1\ansi\ansicpg1252\cocoartf1348\cocoasubrtf170
{\fonttbl\f0\froman\fcharset0 TimesNewRomanPSMT;\f1\fmodern\fcharset0 CourierNewPSMT;}
{\colortbl;\red255\green255\blue255;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720

\f0\fs22 \cf0 The operation of both scripts is summarized as follows. \
\pard\pardeftab720

\i \cf0 The ECN injector 
\i0 is in charge of setting 
\i b
\i0\fs14 1 
\fs22 = 1, 
\i N
\i0\fs14 1 
\fs22 times during 
\i N
\i0\fs14 w 
\fs22 packets. For this simple test, the script generates the IP packets. However, in a real scenario these packets will be those forwarded by this node. Hence, for a certain level of congestion \uc0\u951 , the algorithm to decide the value of b1 is: \
\
\pard\pardeftab720

\f1\fs20 \cf0 load=L \
total_sent=0 \
ecn1_sent=0 \
ratio=0.5 //initial ratio \
while true; \
obj_ratio=load/100 \
if obj_ratio >= ratio \
send packet with ECN=1 \
else \
send packet with ECN=1 \
total_sent=total_sent++ \
ratio=ecn1_sent/total_sent \
\
\pard\pardeftab720

\f0\fs22 \cf0 This algorithm always tries to maintain the estimation error in the ECN reader as lower as possible. Each time a new update in the congestion level is made, the algorithm must be executed again. An example of usage for this script is: \
\
\pard\pardeftab720

\f1\fs20 \cf0 python ecn_injector.py -s 193.147.53.172 -d 193.147.53.165 -q 45 \
\
\pard\pardeftab720

\f0\fs22 \cf0 where the options are: \
\
\pard\pardeftab720

\f1\fs20 \cf0 -h, --help Show the help message \
-s IP, --src=IP Source IP address \
-d IP, --dst=IP Destination IP address \
-q Load-level, --load=Load-level Load level from 0-100 \
\
\pard\pardeftab720

\f0\i\fs22 \cf0 The ECN reader 
\i0 reads all IP packets that come from a specific interface and estimate the congestion level for each flow. This is made through the estimation of the ratio of packets with 
\i b
\i0\fs14 1
\fs22 =1 between the total number of packets in window with a size 
\i N
\i0\fs14 w
\fs22 . The window length is in packets, and for this example is a non-overlapping window. Since the inter-arrival time between packets is random, the update interval for congestion estimation varies with time. The use of this script is: \
\
\pard\pardeftab720

\f1\fs20 \cf0 python sniffer2.py -w 5 \
\pard\pardeftab720

\f0 \cf0 \
\pard\pardeftab720

\fs22 \cf0 where the options are: \
\
\pard\pardeftab720

\f1\fs20 \cf0 -h, --help Show this help message and exit 
\f0 \

\f1 -w WinSize, --win=WinSize Window Size in number of packets }